#!/bin/bash

USER=`whoami`
HOST=`hostname -s`
DOMAIN=`hostname -d`
LOG_LEVEL=INFO
HBASE_VERSION=${HBASE_VERSION:-2.1.8}
SERVERS=${SERVERS:-3}
HBASE_HOME=${HBASE_HOME:-"/opt/hbase-${HBASE_VERSION}"}
SSH_PORT=${SSH_PORT:-}

isCUSTOM=${isCUSTOM:-false}
isCheckHOSTNAME=${isCheckHOSTNAME:-false}

ulimit -n 65535

mkdir -p /opt/hbase-${HBASE_VERSION}/pids

echo "export HBASE_PID_DIR=/opt/hbase-${HBASE_VERSION}/pids" >> /opt/hbase-${HBASE_VERSION}/conf/hbase-env.sh
echo "export HBASE_MANAGES_ZK=false" >> /opt/hbase-${HBASE_VERSION}/conf/hbase-env.sh
echo "export JAVA_HOME=${JAVA_HOME}" >> /opt/hbase-${HBASE_VERSION}/conf/hbase-env.sh

function scan_ssh_key() {
    for (( i=1; i<=$SERVERS; i++ ))
    do
        ssh-keyscan -p ${SSH_PORT} -t rsa ${HOSTNAME//-*}-$((i-1)).${DOMAIN} >> ~/.ssh/known_hosts
    done
}

/usr/sbin/sshd
ssh-keyscan -p ${SSH_PORT} -t rsa localhost >> ~/.ssh/known_hosts
/set-ssh-keyscan

if [ ${isCUSTOM} == "false" ]; then

    if [ ${isCheckHOSTNAME} == 'false' ]; then
        for _host in ${HOSTNAMEs[*]}; do
            until echo rcok | nc ${_host} ${SSH_PORT}; do >&2 echo "Starting..." && sleep 1 ; done
        done
    elif [ ${isCheckHOSTNAME} == 'true' ]; then
        for (( i=1; i<=$SERVERS; i++ ))
        do
            until echo rcok | nc ${HOSTNAME//-*}-$((i-1)).${DOMAIN} ${SSH_PORT}; do >&2 echo "Starting..." && sleep 1 ; done
        done
    fi

	scan_ssh_key
fi


until /opt/hbase-${HBASE_VERSION}/bin/start-hbase.sh ; do >&2 echo "Starting..." && sleep 1 ; done

ps aux|grep /usr/sbin/sshd| grep -v grep | awk '{print $2}'|xargs -i kill -9 {} || true
